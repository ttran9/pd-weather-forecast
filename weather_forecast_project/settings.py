"""
Django settings for weather_forecast_project project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import json

with open('/etc/config.json') as config_file:
    config = json.load(config_file)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['WEATHER_FORECAST_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG_FLAG") == "True" 

ALLOWED_HOSTS = ['34.222.112.249', 'djforecast.toddtran.com', 'www.djforecast.toddtran.com']


# Application definition

INSTALLED_APPS = [
    "forecasts.apps.ForecastsConfig",
    "users.apps.UsersConfig",
    "crispy_forms",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'weather_forecast_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'weather_forecast_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config["POSTGRES_DB"],
        "USER": config["POSTGRES_USER_NAME"],
        "PASSWORD": config["POSTGRES_PW"],
        "HOST": config["POSTGRES_HOST"],
        "PORT": config["POSTGRES_PORT"],
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

# change setting to use a different bootstrap style than the default (bootstrap 2)
CRISPY_TEMPLATE_PACK = "bootstrap4"

# redirect to a page after successfully logging in!
LOGIN_REDIRECT_URL = "forecasts-home"

# tell Django where to find our log-in route.
# example: when we have come across a page that requires the user to be logged in..
LOGIN_URL = "login"  # name for the URL pattern in the project's url.py file.

EMAIL_BACKEND = config["DJANGO_APP_EMAIL_BACKEND"]
EMAIL_HOST = config["DJANGO_APP_EMAIL_HOST"]
EMAIL_PORT = config["DJANGO_APP_EMAIL_PORT"]
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config["DJANGO_APP_TEST_EMAIL_USER"]
EMAIL_HOST_PASSWORD = config["DJANGO_APP_TEST_EMAIL_PASSWORD"]
